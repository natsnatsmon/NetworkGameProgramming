

0914

- 단위 -

거리 : meter (1px = 1cm = 0.01m)
시간 : second
질량 : kg
힘 : N(뉴턴) = 1kg짜리를 1초후에 1m 옮길 수 있는 힘

속도 : m/x
가속도 : m/s²

1/60 초 고정


- 공식 -

속도 = 이전속도 + (시간 * 가속도)
위치 = 이전위치 + (시간 * 속도)


-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-


0919 

- 변화량 -

갱신될 위치 = 이전 위치 + (속도 * 시간)
갱신될 속도 = 이전 속도 + (가속도 * 시간)
가속도 = 힘 / 질량 (힘이 없으면 가속도도 없다 = 오브젝트에 작용하는 힘이 0이다)
힘 = WSAD 기반 힘의 방향 설정 = 질량 * 가속도


시간을 기준으로 갱신되는 시스템 상에서 시간이 0이라는 것은 아무것도 안하겠다는 것임


-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-


0921

언리얼에서 1이 10cm다 980이 중력가속도~

- 가속도 구하기 -

정지된 10kg 물체에 1초 동안 10N의 힘을 지속적으로 가하면
-> 속도 = 순간가속도 * 시간	 = 1 * 1 = 1m/s

정지된 5kg 물체에 2초동안 10N의 힘이 지속적으로 가해지면?
-> 속도 = 순간가속도 * 시간 = 2 * 2 = 4m/s


- User control 구현 -
ApplyForce


-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-

1005

Verstion Control System(VCS) : 버전 관리 시스템

- 종류 - 

Local VCS : 로컬

Central VCS : 중앙집중식 버전 관리 시스템
	- 협업을 위한 버전 관리
	- Central VCS

		- 서버 존재
		- 클라 존재
		- 서버 데이터를 받아 사용
		
		EX ) CVS(concurrent Versions System), Subversion, Perforce

		- 장점
			- 누가 무엇을 하는지 쉽게 판단
			- 관리가 쉬움(서버 VCS하나만 관리)

		- 단점
			- 서버 다운
			- 로컬 데이터의 스냅샷이 명확하지 않음(복구 어려움)


Distributed CVS : 분산 버전 관리 시스템
	- 협업을 위한 버전 관리
	- Distributed VCS

		- 서버 존재
		- 클라 존재
		- 서버의 *모든 데이터* 복제

		EX ) Git

		- 특징
			- 모든 데이터를 클라이언트에 복제
			- 서버 다운 시 클라이언트 기반 복구 가능





- 마찰력 -

* 물체와 바닥 사이에서 항시 작용하는 힘
* 운동 방향의 반대로 작용 함~~


				   ↑ 수직항력 N = mg (질량 * 가속도)
				┌──────┐
				│      │
				│  ♥   │→ F
		← 마찰력	│      │
	────────────└──────┘───────────
		μN = μmg   ↓ 중력(mg)
		(μ : 마찰계수)		 
		 


- 벡터의 정규화 (Nomalization) -

* 벡터의 크기를 1로 바꿔주는 작업
* 방향은 유지하며 크기를 1로 바꿔줌으로써 스칼라 값을 곱해 자유롭게 크기를 정할 수 있음

(2, 3) = (2/2*2+3*3 . 3/2*2+3*3)

루트 (2*2 + 3*3)



-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-


1026

Flagship 모델 : 있는거 없는거 모든 기능 넣어서 기준 삼는 거

Branch : 플래그쉽 모델에서 다른 테마?로 만들기 위해 만들 수 있다

git HEAD의 의미 : 가리키고 있는 가지~

git branch : 지금 어떤 가지에서 작업 중인지
git branch "가지 이름" : 
git merge 합칠 가지 이름 : 현재 가지와 이름 쓴 가지를 합친다
git checkout 가지 이름 : 이름 쓴 가지로 넘어간다

플랫폼 개발할 땐 STL같은거 안쓴다.. 큰일날수도 있다...